import os
from django import template
from django.conf import settings

register = template.Library()

class AssetNode(template.Node):
    def __init__(self, bundle):
        self.bundle = bundle

    def render(self, context):
        bundle = template.Variable(self.bundle).resolve(context)

        tags = []
        for pipeline in settings.ASSET_PIPELINES:
            if bundle in pipeline._root().generated_files:
                for output in pipeline.output_urls():
                    if output.endswith(".css"):
                        tag = u'<link rel="stylesheet" type="text/css" href="%s" />' % os.path.join(settings.STATIC_URL, output)
                    elif output.endswith(".js"):
                        tag = u'<script type="text/javascript" src="%s"></script>' % os.path.join(settings.STATIC_URL, output)
                    else:
                        raise ValueError("Invalid output found")

                    tags.append(tag)
                break
        else:
            raise ValueError("Couldn't find generated asset: '%s'" % bundle)
        return '\n'.join(tags)

@register.tag
def include_assets(parser, token):
    try:
        contents = token.split_contents()
        bundle = contents[1]
    except (ValueError, AssertionError, IndexError):
        raise template.TemplateSyntaxError(
            '%r could not parse the arguments: the first argument must be the '
            'the name of a file generated by the pipeline' % contents[0])

    return AssetNode(bundle)
