import os
from django import template
from django.conf import settings

register = template.Library()

class AssetNode(template.Node):
    def __init__(self, pipeline_name):
        self.pipeline_name = pipeline_name

    def render(self, context):
        pipeline_name = template.Variable(self.pipeline_name).resolve(context)
        tags = []
        active = getattr(settings, "ASSET_PIPELINE_ACTIVE", "LIVE")
        try:
            pipeline = settings.ASSET_PIPELINES[active][pipeline_name]
        except:
            raise template.TemplateSyntaxError(
                "Pipline with name %s not defined in settings.ASSET_PIPELINES." % pipeline_name
            )
        for output in pipeline.output_urls():
            if output.endswith(".css"):
                tag = u'<link rel="stylesheet" type="text/css" href="%s" />' % os.path.join(settings.STATIC_URL, output)
            elif output.endswith(".js"):
                tag = u'<script type="text/javascript" src="%s"></script>' % os.path.join(settings.STATIC_URL, output)
            else:
                raise ValueError("Invalid output found")
            tags.append(tag)
        return '\n'.join(tags)

@register.tag
def include_assets(parser, token):
    """ Template tag, {% include_assets "pipeline_name" %}. """
    try:
        contents = token.split_contents()
        pipeline_name = contents[1]
    except (ValueError, AssertionError, IndexError):
        raise template.TemplateSyntaxError(
            '%r could not parse the arguments: the first argument must be the '
            'the name of a file generated by the pipeline' % contents[0])

    return AssetNode(pipeline_name)
